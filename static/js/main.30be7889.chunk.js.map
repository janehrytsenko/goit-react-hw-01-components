{"version":3,"sources":["components/Profile/Profile.module.css","components/Friends/Friends.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Data.js","components/Statistics/randomColor.js","components/Statistics/Statistics.js","components/Friends/FriendListItem.js","components/Friends/FriendList.js","components/TransactionHistory/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatarUrl","name","tag","location","followers","views","likes","className","s","container","src","alt","avatar","width","stats","item","Data","label","percentage","randColor","r","Math","floor","random","g","b","toString","Statistics","title","items","statistics","statList","map","style","backgroundColor","id","FriendListItem","isOnline","status","background","fontSize","FriendList","friends","list","friend","TransactionItem","type","amount","currency","tableRow","TransactionHistory","table","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30be7889.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1Z5Lm\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Friends_list__1oigC\",\"item\":\"Friends_item__1dHUF\",\"status\":\"Friends_status__28DfJ\",\"avatar\":\"Friends_avatar__23sQC\",\"name\":\"Friends_name__3-JXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__eBbE8\",\"tableRow\":\"TransactionHistory_tableRow__2BobX\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css'\n\nconst Profile = ({ avatarUrl, name, tag, location, followers, views, likes }) => {\n    return (\n        <div className={s.container}>\n            <div>\n                <img\n                    src={avatarUrl}\n                    alt={name}\n                    className={s.avatar}\n                     width=\"100\"\n    />\n                <p className={s.name}>{name}</p>\n                <p className={s.tag}>@{tag}</p>\n    <p className={s.location}>{location}</p>\n  </div>\n            <ul className={s.stats}>\n    <li className={s.item}>\n                    <span>Followers</span>\n                    <span>{followers}</span>\n    </li>\n    <li className={s.item}>\n      <span>Views</span>\n      <span>{views}</span>\n    </li>\n    <li className={s.item}>\n      <span>Likes</span>\n      <span>{likes}</span>\n    </li>\n  </ul>\n</div>\n    )\n}\n\nProfile.propTypes = {\n    avatarUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n};\n\nexport default Profile","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css'\n\nconst Data = ({ label, percentage }) => {\n    return (\n                <div className={s.item}>\n                    <span className=\"label\">{label}</span>\n                    <span className=\"percentage\">{percentage}%</span>\n                </div>\n    )\n}\n\nData.propTypes = {\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n};\n\nexport default Data","function randColor() {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n\n  return color;\n}\n\nexport default randColor;","import Data from './Data'\nimport s from './Statistics.module.css'\nimport randColor from './randomColor';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ title, items }) {\n    return (\n        <section className={s.statistics}>\n            {title && <h2 className={s.title}>{title}</h2>}\n    <ul className={s.statList}>\n        {items.map(item => (\n        <li key={item.id} style={{ backgroundColor: randColor() }}>\n                <Data \n                    label={item.label}\n                    percentage={item.percentage}\n                />\n                </li>\n        ))} \n            </ul>\n            </section>\n    )\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics","import PropTypes from 'prop-types';\nimport s from './Friends.module.css'\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n    return (\n        <div className={s.item}>\n            <span className={s.status} style={{ background: isOnline ? 'green' : 'red' }}>{isOnline}</span>\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n            <p className={s.name} style={{fontSize: 20}}>{name}</p>\n        </div>\n    )\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem","import FriendListItem from './FriendListItem'\nimport s from './Friends.module.css'\nimport PropTypes from 'prop-types';\n\nfunction FriendList({ friends } ) {\n    return (\n        <ul className={s.list}>\n            {friends.map(friend => (\n        <li key={friend.id}>\n                    <FriendListItem\n                        isOnline={friend.isOnline}\n                        avatar={friend.avatar}\n                        name={friend.name}\n                />\n                </li>\n        ))} \n        </ul>\n    )\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css'\n\n\nconst TransactionItem = ({ type, amount, currency }) => {\n    return (\n        <tbody className={s.tableRow}>\n            <tr>\n                <td>{type}</td>\n                <td>{amount}</td>\n                <td>{currency}</td>\n                </tr>\n            </tbody>\n    )\n}\n\nexport default TransactionItem","import PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem'\nimport s from './TransactionHistory.module.css'\n\n\nfunction TransactionHistory({ items }) {\n    return (\n        <table className={s.table}>\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n            {items.map(item => (\n                    <TransactionItem \n                        key={item.id}\n                        type={item.type}\n                    amount={item.amount}\n                    currency={item.currency}\n                        />\n                ))}\n        </table>\n    )\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory","import Profile from './components/Profile/Profile';\nimport user from './user.json';\nimport Statistics from './components/Statistics/Statistics'\nimport statisticalData from './statistical-data.json'\nimport friends from './friends.json';\nimport FriendList from './components/Friends/FriendList'\nimport transactions from './transactions.json'\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\n\nexport default function App() {\n    return (\n         <div>\n             <Profile\n                 name={user.name}\n                 tag={user.tag}\n                 location={user.location}\n                 avatarUrl={user.avatar}\n                 followers={user.stats.followers}\n                 views={user.stats.views}\n                 likes={user.stats.likes}\n            />\n            <Statistics title=\"Upload stats\" items={statisticalData} />\n            <Statistics items={statisticalData} /> \n            <FriendList friends={friends} />\n            <TransactionHistory items={transactions}/>\n        </div>\n     )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n     <React.StrictMode>\n         <App />\n     </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n//  ======================================================\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// \n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}